// Code generated by protoc-gen-gogo.
// source: iosxe.proto
// DO NOT EDIT!

/*
Package iosxe is a generated protocol buffer package.

It is generated from these files:
	iosxe.proto

It has these top-level messages:
	Interface
	BridgeDomain
	StaticRoute
*/
package iosxe

import proto "github.com/gogo/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type InterfaceType int32

const (
	InterfaceType_SOFTWARE_LOOPBACK InterfaceType = 0
	InterfaceType_ETHERNET_CSMACD   InterfaceType = 1
	InterfaceType_NVE_INTERFACE     InterfaceType = 2
	InterfaceType_BDI_INTERFACE     InterfaceType = 3
)

var InterfaceType_name = map[int32]string{
	0: "SOFTWARE_LOOPBACK",
	1: "ETHERNET_CSMACD",
	2: "NVE_INTERFACE",
	3: "BDI_INTERFACE",
}
var InterfaceType_value = map[string]int32{
	"SOFTWARE_LOOPBACK": 0,
	"ETHERNET_CSMACD":   1,
	"NVE_INTERFACE":     2,
	"BDI_INTERFACE":     3,
}

func (x InterfaceType) String() string {
	return proto.EnumName(InterfaceType_name, int32(x))
}

type Interface struct {
	Name            string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type            InterfaceType              `protobuf:"varint,2,opt,name=type,proto3,enum=iosxe.InterfaceType" json:"type,omitempty"`
	Decription      string                     `protobuf:"bytes,3,opt,name=decription,proto3" json:"decription,omitempty"`
	IpAddress       string                     `protobuf:"bytes,4,opt,name=ip_address,proto3" json:"ip_address,omitempty"`
	IpRedirects     bool                       `protobuf:"varint,5,opt,name=ip_redirects,proto3" json:"ip_redirects,omitempty"`
	ServiceInstance *Interface_ServiceInstance `protobuf:"bytes,10,opt,name=service_instance" json:"service_instance,omitempty"`
	Vxlan           []*Interface_Vxlan         `protobuf:"bytes,11,rep,name=vxlan" json:"vxlan,omitempty"`
}

func (m *Interface) Reset()         { *m = Interface{} }
func (m *Interface) String() string { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()    {}

func (m *Interface) GetServiceInstance() *Interface_ServiceInstance {
	if m != nil {
		return m.ServiceInstance
	}
	return nil
}

func (m *Interface) GetVxlan() []*Interface_Vxlan {
	if m != nil {
		return m.Vxlan
	}
	return nil
}

type Interface_ServiceInstance struct {
	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Encapsulation string `protobuf:"bytes,2,opt,name=encapsulation,proto3" json:"encapsulation,omitempty"`
}

func (m *Interface_ServiceInstance) Reset()         { *m = Interface_ServiceInstance{} }
func (m *Interface_ServiceInstance) String() string { return proto.CompactTextString(m) }
func (*Interface_ServiceInstance) ProtoMessage()    {}

type Interface_Vxlan struct {
	Vni              uint32 `protobuf:"varint,1,opt,name=vni,proto3" json:"vni,omitempty"`
	SrcInterfaceName string `protobuf:"bytes,2,opt,name=src_interface_name,proto3" json:"src_interface_name,omitempty"`
	DstAddress       string `protobuf:"bytes,3,opt,name=dst_address,proto3" json:"dst_address,omitempty"`
}

func (m *Interface_Vxlan) Reset()         { *m = Interface_Vxlan{} }
func (m *Interface_Vxlan) String() string { return proto.CompactTextString(m) }
func (*Interface_Vxlan) ProtoMessage()    {}

type BridgeDomain struct {
	Id         uint32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Vni        []uint32                  `protobuf:"varint,2,rep,name=vni" json:"vni,omitempty"`
	Interfaces []*BridgeDomain_Interface `protobuf:"bytes,3,rep,name=interfaces" json:"interfaces,omitempty"`
}

func (m *BridgeDomain) Reset()         { *m = BridgeDomain{} }
func (m *BridgeDomain) String() string { return proto.CompactTextString(m) }
func (*BridgeDomain) ProtoMessage()    {}

func (m *BridgeDomain) GetInterfaces() []*BridgeDomain_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type BridgeDomain_Interface struct {
	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServiceInstance uint32 `protobuf:"varint,2,opt,name=service_instance,proto3" json:"service_instance,omitempty"`
}

func (m *BridgeDomain_Interface) Reset()         { *m = BridgeDomain_Interface{} }
func (m *BridgeDomain_Interface) String() string { return proto.CompactTextString(m) }
func (*BridgeDomain_Interface) ProtoMessage()    {}

type StaticRoute struct {
	DstAddress            string `protobuf:"bytes,1,opt,name=dst_address,proto3" json:"dst_address,omitempty"`
	NextHopAddress        string `protobuf:"bytes,2,opt,name=next_hop_address,proto3" json:"next_hop_address,omitempty"`
	OutgoingInterfaceName string `protobuf:"bytes,3,opt,name=outgoing_interface_name,proto3" json:"outgoing_interface_name,omitempty"`
}

func (m *StaticRoute) Reset()         { *m = StaticRoute{} }
func (m *StaticRoute) String() string { return proto.CompactTextString(m) }
func (*StaticRoute) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("iosxe.InterfaceType", InterfaceType_name, InterfaceType_value)
}
