// Code generated by protoc-gen-gogo.
// source: controller.proto
// DO NOT EDIT!

/*
Package controller is a generated protocol buffer package.

It is generated from these files:
	controller.proto

It has these top-level messages:
	L3VRFRoute
	L3ArpEntry
	L2FIBEntry
	BDParms
	L2BD
	IPAMPool
	SystemParameters
	VNFToNodeMap
	RenderedVppAgentEntry
	Interface
	VNF
	Connection
	Node
	VNFService
	VNFServiceMesh
	NodeState
	VNFServiceState
	InterfaceState
*/
package controller

import proto "github.com/gogo/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type L3VRFRoute struct {
	VrfId             uint32 `protobuf:"varint,1,opt,name=vrf_id,proto3" json:"vrf_id,omitempty"`
	Description       string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DstIpAddr         string `protobuf:"bytes,3,opt,name=dst_ip_addr,proto3" json:"dst_ip_addr,omitempty"`
	NextHopAddr       string `protobuf:"bytes,4,opt,name=next_hop_addr,proto3" json:"next_hop_addr,omitempty"`
	OutgoingInterface string `protobuf:"bytes,5,opt,name=outgoing_interface,proto3" json:"outgoing_interface,omitempty"`
	Weight            uint32 `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Preference        uint32 `protobuf:"varint,7,opt,name=preference,proto3" json:"preference,omitempty"`
}

func (m *L3VRFRoute) Reset()         { *m = L3VRFRoute{} }
func (m *L3VRFRoute) String() string { return proto.CompactTextString(m) }
func (*L3VRFRoute) ProtoMessage()    {}

type L3ArpEntry struct {
	IpAddress   string `protobuf:"bytes,1,opt,name=ip_address,proto3" json:"ip_address,omitempty"`
	PhysAddress string `protobuf:"bytes,2,opt,name=phys_address,proto3" json:"phys_address,omitempty"`
}

func (m *L3ArpEntry) Reset()         { *m = L3ArpEntry{} }
func (m *L3ArpEntry) String() string { return proto.CompactTextString(m) }
func (*L3ArpEntry) ProtoMessage()    {}

type L2FIBEntry struct {
	DestMacAddress string `protobuf:"bytes,1,opt,name=dest_mac_address,proto3" json:"dest_mac_address,omitempty"`
	BdName         string `protobuf:"bytes,2,opt,name=bd_name,proto3" json:"bd_name,omitempty"`
	OutgoingIf     string `protobuf:"bytes,3,opt,name=outgoing_if,proto3" json:"outgoing_if,omitempty"`
	Action         string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Bvi            bool   `protobuf:"varint,5,opt,name=bvi,proto3" json:"bvi,omitempty"`
}

func (m *L2FIBEntry) Reset()         { *m = L2FIBEntry{} }
func (m *L2FIBEntry) String() string { return proto.CompactTextString(m) }
func (*L2FIBEntry) ProtoMessage()    {}

type BDParms struct {
	Name                string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Flood               bool   `protobuf:"varint,2,opt,name=flood,proto3" json:"flood,omitempty"`
	UnknownUnicastFlood bool   `protobuf:"varint,3,opt,name=unknown_unicast_flood,proto3" json:"unknown_unicast_flood,omitempty"`
	Forward             bool   `protobuf:"varint,4,opt,name=forward,proto3" json:"forward,omitempty"`
	Learn               bool   `protobuf:"varint,5,opt,name=learn,proto3" json:"learn,omitempty"`
	ArpTermination      bool   `protobuf:"varint,6,opt,name=arp_termination,proto3" json:"arp_termination,omitempty"`
	MacAgeMinutes       uint32 `protobuf:"varint,7,opt,name=mac_age_minutes,proto3" json:"mac_age_minutes,omitempty"`
}

func (m *BDParms) Reset()         { *m = BDParms{} }
func (m *BDParms) String() string { return proto.CompactTextString(m) }
func (*BDParms) ProtoMessage()    {}

type L2BD struct {
	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BdParms      *BDParms `protobuf:"bytes,2,opt,name=bd_parms" json:"bd_parms,omitempty"`
	L2BdTemplate string   `protobuf:"bytes,3,opt,name=l2bd_template,proto3" json:"l2bd_template,omitempty"`
}

func (m *L2BD) Reset()         { *m = L2BD{} }
func (m *L2BD) String() string { return proto.CompactTextString(m) }
func (*L2BD) ProtoMessage()    {}

func (m *L2BD) GetBdParms() *BDParms {
	if m != nil {
		return m.BdParms
	}
	return nil
}

// IPAM will choose an address using the prefix.  In the example, there is an 8 bit address space [0..255]
// if 0..255 are not desired then a start and end address can be used.  See comments below.
type IPAMPool struct {
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope      string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Network    string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	StartRange uint32 `protobuf:"varint,4,opt,name=start_range,proto3" json:"start_range,omitempty"`
	EndRange   uint32 `protobuf:"varint,5,opt,name=end_range,proto3" json:"end_range,omitempty"`
}

func (m *IPAMPool) Reset()         { *m = IPAMPool{} }
func (m *IPAMPool) String() string { return proto.CompactTextString(m) }
func (*IPAMPool) ProtoMessage()    {}

type SystemParameters struct {
	Mtu                          uint32     `protobuf:"varint,1,opt,name=mtu,proto3" json:"mtu,omitempty"`
	DefaultStaticRouteWeight     uint32     `protobuf:"varint,3,opt,name=default_static_route_weight,proto3" json:"default_static_route_weight,omitempty"`
	DefaultStaticRoutePreference uint32     `protobuf:"varint,4,opt,name=default_static_route_preference,proto3" json:"default_static_route_preference,omitempty"`
	L2BdTemplates                []*BDParms `protobuf:"bytes,5,rep,name=l2bd_templates" json:"l2bd_templates,omitempty"`
	RxMode                       string     `protobuf:"bytes,7,opt,name=rx_mode,proto3" json:"rx_mode,omitempty"`
}

func (m *SystemParameters) Reset()         { *m = SystemParameters{} }
func (m *SystemParameters) String() string { return proto.CompactTextString(m) }
func (*SystemParameters) ProtoMessage()    {}

func (m *SystemParameters) GetL2BdTemplates() []*BDParms {
	if m != nil {
		return m.L2BdTemplates
	}
	return nil
}

type VNFToNodeMap struct {
	Vnf  string `protobuf:"bytes,1,opt,name=vnf,proto3" json:"vnf,omitempty"`
	Node string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (m *VNFToNodeMap) Reset()         { *m = VNFToNodeMap{} }
func (m *VNFToNodeMap) String() string { return proto.CompactTextString(m) }
func (*VNFToNodeMap) ProtoMessage()    {}

// The rendered vpp agent entry is identified by the key, and type, which are used
// to read the entry from etcd
type RenderedVppAgentEntry struct {
	VppAgentKey  string `protobuf:"bytes,1,opt,name=vpp_agent_key,proto3" json:"vpp_agent_key,omitempty"`
	VppAgentType string `protobuf:"bytes,3,opt,name=vpp_agent_type,proto3" json:"vpp_agent_type,omitempty"`
}

func (m *RenderedVppAgentEntry) Reset()         { *m = RenderedVppAgentEntry{} }
func (m *RenderedVppAgentEntry) String() string { return proto.CompactTextString(m) }
func (*RenderedVppAgentEntry) ProtoMessage()    {}

type Interface struct {
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IfType     string `protobuf:"bytes,2,opt,name=if_type,proto3" json:"if_type,omitempty"`
	MacAddress string `protobuf:"bytes,3,opt,name=mac_address,proto3" json:"mac_address,omitempty"`
	// 02:00:00:00:00:00 as base, last octet increments
	Mtu                  uint32                `protobuf:"varint,4,opt,name=mtu,proto3" json:"mtu,omitempty"`
	RxMode               string                `protobuf:"bytes,5,opt,name=rx_mode,proto3" json:"rx_mode,omitempty"`
	IpAddresses          []string              `protobuf:"bytes,6,rep,name=ip_addresses" json:"ip_addresses,omitempty"`
	VrfId                uint32                `protobuf:"varint,7,opt,name=vrf_id,proto3" json:"vrf_id,omitempty"`
	IpamPoolName         string                `protobuf:"bytes,8,opt,name=ipam_pool_name,proto3" json:"ipam_pool_name,omitempty"`
	AdminStatus          string                `protobuf:"bytes,9,opt,name=admin_status,proto3" json:"admin_status,omitempty"`
	CustomLabels         []string              `protobuf:"bytes,10,rep,name=custom_labels" json:"custom_labels,omitempty"`
	MemifParms           *Interface_MemIFParms `protobuf:"bytes,11,opt,name=memif_parms" json:"memif_parms,omitempty"`
	RenderingNotRequired bool                  `protobuf:"varint,12,opt,name=rendering_not_required,proto3" json:"rendering_not_required,omitempty"`
}

func (m *Interface) Reset()         { *m = Interface{} }
func (m *Interface) String() string { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()    {}

func (m *Interface) GetMemifParms() *Interface_MemIFParms {
	if m != nil {
		return m.MemifParms
	}
	return nil
}

type Interface_MemIFParms struct {
	Mode         string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	InterVnfConn string `protobuf:"bytes,2,opt,name=inter_vnf_conn,proto3" json:"inter_vnf_conn,omitempty"`
}

func (m *Interface_MemIFParms) Reset()         { *m = Interface_MemIFParms{} }
func (m *Interface_MemIFParms) String() string { return proto.CompactTextString(m) }
func (*Interface_MemIFParms) ProtoMessage()    {}

type VNF struct {
	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VnfType    string       `protobuf:"bytes,2,opt,name=vnf_type,proto3" json:"vnf_type,omitempty"`
	Interfaces []*Interface `protobuf:"bytes,3,rep,name=interfaces" json:"interfaces,omitempty"`
	L2Bds      []*L2BD      `protobuf:"bytes,4,rep,name=l2bds" json:"l2bds,omitempty"`
}

func (m *VNF) Reset()         { *m = VNF{} }
func (m *VNF) String() string { return proto.CompactTextString(m) }
func (*VNF) ProtoMessage()    {}

func (m *VNF) GetInterfaces() []*Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *VNF) GetL2Bds() []*L2BD {
	if m != nil {
		return m.L2Bds
	}
	return nil
}

type Connection struct {
	ConnType       string                  `protobuf:"bytes,1,opt,name=conn_type,proto3" json:"conn_type,omitempty"`
	VnfServiceMesh string                  `protobuf:"bytes,2,opt,name=vnf_service_mesh,proto3" json:"vnf_service_mesh,omitempty"`
	Interfaces     []*Connection_Interface `protobuf:"bytes,3,rep,name=interfaces" json:"interfaces,omitempty"`
	UseNodeL2Bd    string                  `protobuf:"bytes,4,opt,name=use_node_l2bd,proto3" json:"use_node_l2bd,omitempty"`
	// only for l2mp connections
	L2Bd *L2BD `protobuf:"bytes,5,opt,name=l2bd" json:"l2bd,omitempty"`
	// create a l2bd with default parms for l2mp connections
	NodeInterfaceLabels []string `protobuf:"bytes,6,rep,name=node_interface_labels" json:"node_interface_labels,omitempty"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}

func (m *Connection) GetInterfaces() []*Connection_Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *Connection) GetL2Bd() *L2BD {
	if m != nil {
		return m.L2Bd
	}
	return nil
}

type Connection_Interface struct {
	Vnf       string `protobuf:"bytes,1,opt,name=vnf,proto3" json:"vnf,omitempty"`
	Interface string `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	Node      string `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
}

func (m *Connection_Interface) Reset()         { *m = Connection_Interface{} }
func (m *Connection_Interface) String() string { return proto.CompactTextString(m) }
func (*Connection_Interface) ProtoMessage()    {}

type Node struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags                 []*Node_NodeTag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
	NodeType             string          `protobuf:"bytes,3,opt,name=node_type,proto3" json:"node_type,omitempty"`
	HasMultipleVswitches bool            `protobuf:"varint,4,opt,name=has_multiple_vswitches,proto3" json:"has_multiple_vswitches,omitempty"`
	Interfaces           []*Interface    `protobuf:"bytes,5,rep,name=interfaces" json:"interfaces,omitempty"`
	Vswitches            []*VNF          `protobuf:"bytes,6,rep,name=vswitches" json:"vswitches,omitempty"`
	L2Bds                []*L2BD         `protobuf:"bytes,9,rep,name=l2bds" json:"l2bds,omitempty"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}

func (m *Node) GetTags() []*Node_NodeTag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Node) GetInterfaces() []*Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *Node) GetVswitches() []*VNF {
	if m != nil {
		return m.Vswitches
	}
	return nil
}

func (m *Node) GetL2Bds() []*L2BD {
	if m != nil {
		return m.L2Bds
	}
	return nil
}

type Node_NodeTag struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Node_NodeTag) Reset()         { *m = Node_NodeTag{} }
func (m *Node_NodeTag) String() string { return proto.CompactTextString(m) }
func (*Node_NodeTag) ProtoMessage()    {}

type VNFService struct {
	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vnfs        []*VNF        `protobuf:"bytes,3,rep,name=vnfs" json:"vnfs,omitempty"`
	Connections []*Connection `protobuf:"bytes,4,rep,name=connections" json:"connections,omitempty"`
}

func (m *VNFService) Reset()         { *m = VNFService{} }
func (m *VNFService) String() string { return proto.CompactTextString(m) }
func (*VNFService) ProtoMessage()    {}

func (m *VNFService) GetVnfs() []*VNF {
	if m != nil {
		return m.Vnfs
	}
	return nil
}

func (m *VNFService) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

type VNFServiceMesh struct {
	Name                  string                                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ServiceMeshType       string                                `protobuf:"bytes,2,opt,name=service_mesh_type,proto3" json:"service_mesh_type,omitempty"`
	ConnectionType        string                                `protobuf:"bytes,3,opt,name=connection_type,proto3" json:"connection_type,omitempty"`
	VxlanHubAndSpokeParms *VNFServiceMesh_VxlanHubAndSpokeParms `protobuf:"bytes,8,opt,name=vxlan_hub_and_spoke_parms" json:"vxlan_hub_and_spoke_parms,omitempty"`
	VxlanMeshParms        *VNFServiceMesh_VxlanMeshParms        `protobuf:"bytes,9,opt,name=vxlan_mesh_parms" json:"vxlan_mesh_parms,omitempty"`
}

func (m *VNFServiceMesh) Reset()         { *m = VNFServiceMesh{} }
func (m *VNFServiceMesh) String() string { return proto.CompactTextString(m) }
func (*VNFServiceMesh) ProtoMessage()    {}

func (m *VNFServiceMesh) GetVxlanHubAndSpokeParms() *VNFServiceMesh_VxlanHubAndSpokeParms {
	if m != nil {
		return m.VxlanHubAndSpokeParms
	}
	return nil
}

func (m *VNFServiceMesh) GetVxlanMeshParms() *VNFServiceMesh_VxlanMeshParms {
	if m != nil {
		return m.VxlanMeshParms
	}
	return nil
}

type VNFServiceMesh_VxlanHubAndSpokeParms struct {
	HubNodeName            string `protobuf:"bytes,1,opt,name=hub_node_name,proto3" json:"hub_node_name,omitempty"`
	Vni                    uint32 `protobuf:"varint,2,opt,name=vni,proto3" json:"vni,omitempty"`
	LoopbackIpamPoolName   string `protobuf:"bytes,3,opt,name=loopback_ipam_pool_name,proto3" json:"loopback_ipam_pool_name,omitempty"`
	OutgoingInterfaceLabel string `protobuf:"bytes,4,opt,name=outgoing_interface_label,proto3" json:"outgoing_interface_label,omitempty"`
}

func (m *VNFServiceMesh_VxlanHubAndSpokeParms) Reset()         { *m = VNFServiceMesh_VxlanHubAndSpokeParms{} }
func (m *VNFServiceMesh_VxlanHubAndSpokeParms) String() string { return proto.CompactTextString(m) }
func (*VNFServiceMesh_VxlanHubAndSpokeParms) ProtoMessage()    {}

type VNFServiceMesh_VxlanMeshParms struct {
	VniRangeStart          uint32 `protobuf:"varint,1,opt,name=vni_range_start,proto3" json:"vni_range_start,omitempty"`
	VniRangeEnd            uint32 `protobuf:"varint,2,opt,name=vni_range_end,proto3" json:"vni_range_end,omitempty"`
	LoopbackIpamPoolName   string `protobuf:"bytes,3,opt,name=loopback_ipam_pool_name,proto3" json:"loopback_ipam_pool_name,omitempty"`
	OutgoingInterfaceLabel string `protobuf:"bytes,4,opt,name=outgoing_interface_label,proto3" json:"outgoing_interface_label,omitempty"`
}

func (m *VNFServiceMesh_VxlanMeshParms) Reset()         { *m = VNFServiceMesh_VxlanMeshParms{} }
func (m *VNFServiceMesh_VxlanMeshParms) String() string { return proto.CompactTextString(m) }
func (*VNFServiceMesh_VxlanMeshParms) ProtoMessage()    {}

type NodeState struct {
	Name                    string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OperStatus              string                   `protobuf:"bytes,2,opt,name=oper_status,proto3" json:"oper_status,omitempty"`
	Msg                     []string                 `protobuf:"bytes,4,rep,name=msg" json:"msg,omitempty"`
	RenderedVppAgentEntries []*RenderedVppAgentEntry `protobuf:"bytes,5,rep,name=rendered_vpp_agent_entries" json:"rendered_vpp_agent_entries,omitempty"`
}

func (m *NodeState) Reset()         { *m = NodeState{} }
func (m *NodeState) String() string { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()    {}

func (m *NodeState) GetRenderedVppAgentEntries() []*RenderedVppAgentEntry {
	if m != nil {
		return m.RenderedVppAgentEntries
	}
	return nil
}

type VNFServiceState struct {
	Name                    string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OperStatus              string                   `protobuf:"bytes,2,opt,name=oper_status,proto3" json:"oper_status,omitempty"`
	Msg                     []string                 `protobuf:"bytes,3,rep,name=msg" json:"msg,omitempty"`
	RenderedVppAgentEntries []*RenderedVppAgentEntry `protobuf:"bytes,4,rep,name=rendered_vpp_agent_entries" json:"rendered_vpp_agent_entries,omitempty"`
}

func (m *VNFServiceState) Reset()         { *m = VNFServiceState{} }
func (m *VNFServiceState) String() string { return proto.CompactTextString(m) }
func (*VNFServiceState) ProtoMessage()    {}

func (m *VNFServiceState) GetRenderedVppAgentEntries() []*RenderedVppAgentEntry {
	if m != nil {
		return m.RenderedVppAgentEntries
	}
	return nil
}

type InterfaceState struct {
	Vnf         string   `protobuf:"bytes,1,opt,name=vnf,proto3" json:"vnf,omitempty"`
	Interface   string   `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	OperStatus  string   `protobuf:"bytes,3,opt,name=oper_status,proto3" json:"oper_status,omitempty"`
	Msg         []string `protobuf:"bytes,4,rep,name=msg" json:"msg,omitempty"`
	MacAddress  string   `protobuf:"bytes,5,opt,name=mac_address,proto3" json:"mac_address,omitempty"`
	IpAddresses []string `protobuf:"bytes,7,rep,name=ip_addresses" json:"ip_addresses,omitempty"`
	MemifID     uint32   `protobuf:"varint,8,opt,name=memifID,proto3" json:"memifID,omitempty"`
	VrfID       uint32   `protobuf:"varint,9,opt,name=vrfID,proto3" json:"vrfID,omitempty"`
	Node        string   `protobuf:"bytes,10,opt,name=node,proto3" json:"node,omitempty"`
}

func (m *InterfaceState) Reset()         { *m = InterfaceState{} }
func (m *InterfaceState) String() string { return proto.CompactTextString(m) }
func (*InterfaceState) ProtoMessage()    {}
