// Copyright (c) 2018 Cisco and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/ligato/sfc-controller/plugins/k8scrd/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// IpamPools returns a IpamPoolInformer.
	IpamPools() IpamPoolInformer
	// NetworkNodes returns a NetworkNodeInformer.
	NetworkNodes() NetworkNodeInformer
	// NetworkNodeOverlays returns a NetworkNodeOverlayInformer.
	NetworkNodeOverlays() NetworkNodeOverlayInformer
	// NetworkServices returns a NetworkServiceInformer.
	NetworkServices() NetworkServiceInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// IpamPools returns a IpamPoolInformer.
func (v *version) IpamPools() IpamPoolInformer {
	return &ipamPoolInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkNodes returns a NetworkNodeInformer.
func (v *version) NetworkNodes() NetworkNodeInformer {
	return &networkNodeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkNodeOverlays returns a NetworkNodeOverlayInformer.
func (v *version) NetworkNodeOverlays() NetworkNodeOverlayInformer {
	return &networkNodeOverlayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkServices returns a NetworkServiceInformer.
func (v *version) NetworkServices() NetworkServiceInformer {
	return &networkServiceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
